@page "/book"
@using Microsoft.AspNetCore.Authorization
@using LibraryManagerBlazor.Shared.DTOs.FormModels
@using Microsoft.AspNetCore.Components
@using System.Net
@using Newtonsoft.Json
@using LibraryManagerBlazor.Shared.DTOs
@inject HttpClient Http


@if (_category == null && _cover == null)
{
    <p><em>Loading...1</em></p>
}
else
{
    <div class="panel panel-default mt-5" style="width: auto">
        @if (_successBool == true)
        {
            <div class="alert alert-success" role="alert">
                Poprawnie wypożyczono.
            </div>
        }

        <div class="panel-heading">
            Dodaj książkę
        </div>
        <div class="panel-body">

            <EditForm Model="@model" OnValidSubmit="@OnValidSubmit">

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Nazwa</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" placeholder="Nazwa" name="Nazwa" @bind="model.Name">
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Autor</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" placeholder="Autor" @bind="model.Author">
                    </div>
                </div>
                <fieldset class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            <label class="col-form-label">Kategoria</label>
                        </div>

                        <div class="col-sm-10">
                            <select class="form-control form-control-sm" aria-label="Default select example" @bind="model.categoryId">
                                <option selected>Wybierz kategorie</option>
                                @foreach (var item in _category)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                </fieldset>
                <fieldset class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            <label class="col-form-label">Rodzaj okładki</label>
                        </div>

                        <div class="col-sm-10">
                            <select class="form-control form-control-sm" aria-label="Default select example" @bind="model.coverId">
                                <option selected>Wybierz typ okładki</option>
                                @foreach (var item in _cover)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                </fieldset>


                <div class="form-group row">
                    <div class="col-sm-10">
                        <button type="submit" class="btn btn-primary">Dodaj</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
}






@code {
    private CoverDTO[] _cover;
    private CategoryDTO[] _category;
    private bool _successBool;

    BookAddModel model = new BookAddModel();

    protected override async Task OnInitializedAsync()
    {

        _category = await Http.GetFromJsonAsync<CategoryDTO[]>("api/category");
        _cover = await Http.GetFromJsonAsync<CoverDTO[]>("api/cover");
    }

    private async Task OnValidSubmit()
    {
        string json = JsonConvert.SerializeObject(model);
        StringContent httpContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        var resp = await Http.PostAsync("api/book/add", httpContent);
        _successBool = true;
    }


}

